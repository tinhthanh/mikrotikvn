{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkC;AAC5C;;;;;ICHxC,iEAEM;;;IAEN,sEACI;IAAA,oEAAG;IAAA,4EAAiB;IAAA,4DAAI;IAC5B,4DAAM;;ADDN;IAQE,uBAAoB,WAAwB,EAAU,oBAA0C;QAA5E,gBAAW,GAAX,WAAW,CAAa;QAAU,yBAAoB,GAApB,oBAAoB,CAAsB;QAFhG,iBAAY,GAAG,KAAK,CAAC;IAE+E,CAAC;IAErG,gCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,oBAAoB,CAAC,YAAY;aACnC,IAAI,CACH,6DAAM,CAAC,UAAC,GAAiB,IAAK,UAAG,CAAC,SAAS,KAAK,6DAAS,CAAC,aAAa,EAAzC,CAAyC,CAAC,CACzE;aACA,SAAS,CAAC,UAAC,MAAoB;YAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACpB,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,iFAAiF,CAAC;YAEzG,IAAM,OAAO,GAAG,MAAM,CAAC,OAA+B,CAAC;YACvD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IAC5E,CAAC;8EAvBU,aAAa;iGAAb,aAAa;YCV1B,yGAEM;YAEN,yGAEM;;YANA,mFAAmB;YAInB,0DAAkB;YAAlB,kFAAkB;;wBDJxB;CAmCC;AAzByB;6FAAb,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AETD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;ACfE;AAC8C;AACW;AAC/F;AACoB;;;;;;;ICSnD,2EAAiD;;;;IAO3C,4EAAkE;IAAlB,oTAAiB;IAAC,iFAAY;IAAA,4DAAS;;;;IACvF,4EAAkE;IAAnB,qTAAkB;IAAC,iEAAM;IAAA,4DAAS;;;;IALvF,yEACE;IAAA,yEACE;IAAA,0EAAsC;IAAhC,wSAAiB;IAAe,iEAAO;IAAA,4DAAO;IACpD,yEACE;IAAA,oHAAuF;IACvF,oHAAiF;IACnF,4DAAM;IACR,4DAAM;IACN,oEAAwB;IAC1B,4DAAM;;;IAL2B,0DAAmB;IAAnB,sFAAmB;IACnB,0DAAkB;IAAlB,qFAAkB;;ADfnD;IAWE,sBACqC,eAAuC,EAClE,WAAwB,EACxB,oBAA0C;QAFf,oBAAe,GAAf,eAAe,CAAwB;QAClE,gBAAW,GAAX,WAAW,CAAa;QACxB,yBAAoB,GAApB,oBAAoB,CAAsB;QARpD,UAAK,GAAG,oBAAoB,CAAC;QAC7B,aAAQ,GAAG,KAAK,CAAC;QACjB,iBAAY,GAAG,KAAK,CAAC;QACJ,iBAAY,GAAG,IAAI,4CAAO,EAAQ,CAAC;QACpD,YAAO,GAAG,KAAK,CAAC;IAKZ,CAAC;IAEL,+BAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,QAAQ,GAAG,MAAM,KAAK,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAE3D,IAAI,CAAC,oBAAoB,CAAC,WAAW;aAClC,IAAI,CACH,6DAAM,CAAC,UAAC,MAAyB,IAAK,aAAM,KAAK,qEAAiB,CAAC,IAAI,EAAjC,CAAiC,CAAC,EACxE,gEAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B;aACA,SAAS,CAAC;YACT,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sCAAe,GAAf;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAC1E,IAAG,CAAC,IAAI,CAAC,YAAY,EAAE;YACvB,IAAI,CAAC,KAAK,EAAE,CAAC;SACZ;aAAM;YACL,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,iFAAiF,CAAC;SAC1G;IACH,CAAC;IAED,4BAAK,GAAL;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,eAAe,CAAC,eAAe,KAAK,mEAAe,CAAC,KAAK,EAAE;YAClE,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,2DAAK,IAAI,CAAC,eAAe,CAAC,WAAW,CAAkB,CAAC;qBACjF,SAAS,CAAC,UAAC,QAA8B;oBACxC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/D,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;qBAC1B,SAAS,CAAC,UAAC,QAA8B;oBACxC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;gBAC/D,CAAC,CAAC,CAAC;aACN;SACF;aAAM;YACL,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;gBACpC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,2DAAK,IAAI,CAAC,eAAe,CAAC,WAAW,CAAqB,CAAC,CAAC;aAC5F;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;aAClC;SACF;IACH,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,IAAI,CAAC,eAAe,CAAC,eAAe,KAAK,mEAAe,CAAC,KAAK,EAAE;YAClE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;gBAC3B,qBAAqB,EAAE,GAAG;gBAC1B,qBAAqB,EAAE,GAAG;aAC3B,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;gBAC9B,qBAAqB,EAAE,GAAG;aAC3B,CAAC,CAAC;SACJ;IACH,CAAC;IACD,4BAAK,GAAL;QACE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IACD,kCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;4EA1EU,YAAY,kEAOb,qEAAiB;gGAPhB,YAAY;YCEzB,4HAAiD;YAGjD,wGASM;;YAZU,+EAAe;YAGzB,0DAAa;YAAb,6EAAa;;uBDhBnB;CAsFC;AA3EwB;6FAAZ,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;sBAQI,oDAAM;uBAAC,qEAAiB;;;;;;;;;;;;;;AElB7B;AAAA;AAAA;AAAA;AAAkD;;;AAGlD,IAAM,cAAc,GAAG,qCAAqC,CAAC;AAS7D;IAQE,0BACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACtB,CAAC;IAEL,mCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,qCAAU,GAAV;QAAA,iBAKC;QAJC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC;aAC1B,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;oFAhBU,gBAAgB;oGAAhB,gBAAgB;YCjB7B,sEACI;YAAA,oEAAG;YAAA,yEAAQ;YAAA,uEAAY;YAAA,4DAAS;YAAC,uDAAsB;YAAA,4DAAI;YAC3D,oEAAG;YAAA,yEAAQ;YAAA,sEAAW;YAAA,4DAAS;YAAC,uDAAoB;YAAA,4DAAI;YACxD,oEAAG;YAAA,0EAAQ;YAAA,mEAAO;YAAA,4DAAS;YAAC,wDAA8B;YAAA,4DAAI;YAC9D,qEAAG;YAAA,0EAAQ;YAAA,gEAAI;YAAA,4DAAS;YAAC,wDAAe;YAAA,4DAAI;YAChD,4DAAM;;YAJ+B,0DAAsB;YAAtB,6HAAsB;YACvB,0DAAoB;YAApB,2HAAoB;YACxB,0DAA8B;YAA9B,qIAA8B;YACjC,0DAAe;YAAf,sHAAe;;2BDJ5C;CAkCC;AAjB4B;6FAAhB,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AEhBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACqB;AACtC;AAEkB;AACE;AACN;AAEC;AACT;AACO;AACS;AAEY;AAC8D;AAC+G;;AAExP,IAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;AAE9G,SAAS,cAAc,CAAC,QAAkB,EAAE,OAAe;IAChE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACvB,CAAC;AAEM,SAAS,mBAAmB;IACjC,OAAO,IAAI,4EAAuB,CAAC;QACjC,IAAI,EAAE;YACJ,QAAQ,EAAE,sCAAsC;YAChD,SAAS,EAAE,wEAAwE;YACnF,WAAW,EAAE,qCAAqC;SACnD;QACD,KAAK,EAAE;YACL,aAAa,EAAE,yEAAoB,CAAC,YAAY;YAChD,sBAAsB,EAAE,IAAI;SAC7B;QACD,MAAM,EAAE;YACN,aAAa,EAAE;gBACb,cAAc;gBACd,QAAQ,EAAE,6DAAQ,CAAC,IAAI;gBACvB,iBAAiB,EAAE,KAAK;aACzB;SACF;KACF,CAAC,CAAC;AACL,CAAC;AAEM,SAAS,4BAA4B;IAC1C,IAAM,oBAAoB,GAAG,IAAI,GAAG,EAAyB,CAAC;IAC9D,oBAAoB,CAAC,GAAG,CAAC,qCAAqC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC;IAE/E,OAAO;QACL,eAAe,EAAE,oEAAe,CAAC,QAAQ;QACzC,oBAAoB;KACrB,CAAC;AACJ,CAAC;AAEM,SAAS,sBAAsB;IACpC,OAAO;QACL,eAAe,EAAE,oEAAe,CAAC,QAAQ;QACzC,WAAW,EAAE;YACX,MAAM,EAAE,CAAC,WAAW,CAAC;SACtB;KACF,CAAC;AACJ,CAAC;AAED;IAAA;KAwC0B;4FAAb,SAAS,cAFR,2DAAY,EAAE,0EAAqB;gJAEpC,SAAS,mBAxBT;YACT;gBACE,OAAO,EAAE,uEAAiB;gBAC1B,QAAQ,EAAE,oEAAe;gBACzB,KAAK,EAAE,IAAI;aACZ;YACD;gBACE,OAAO,EAAE,kEAAa;gBACtB,UAAU,EAAE,mBAAmB;aAChC;YACD;gBACE,OAAO,EAAE,sEAAiB;gBAC1B,UAAU,EAAE,sBAAsB;aACnC;YACD;gBACE,OAAO,EAAE,4EAAuB;gBAChC,UAAU,EAAE,4BAA4B;aACzC;YACD,gEAAW;YACX,8DAAS;YACT,yEAAoB;SACrB,YA/BQ;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,oEAAgB;gBAChB,wEAAe;gBACf,0EAAgB;gBAChB,oEAAa;gBACb,sEAAgB;gBAChB,+DAAU;aACX;oBA9EH;CAuG0B;AAAJ;mIAAT,SAAS,mBAtClB,2DAAY;QACZ,kEAAa;QACb,2EAAgB,aAGhB,uEAAa;QACb,4FAAuB;QACvB,oEAAgB;QAChB,wEAAe;QACf,0EAAgB;QAChB,oEAAa;QACb,sEAAgB;QAChB,+DAAU;6FA0BD,SAAS;cAxCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,kEAAa;oBACb,2EAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,oEAAgB;oBAChB,wEAAe;oBACf,0EAAgB;oBAChB,oEAAa;oBACb,sEAAgB;oBAChB,+DAAU;iBACX;gBACD,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,uEAAiB;wBAC1B,QAAQ,EAAE,oEAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,kEAAa;wBACtB,UAAU,EAAE,mBAAmB;qBAChC;oBACD;wBACE,OAAO,EAAE,sEAAiB;wBAC1B,UAAU,EAAE,sBAAsB;qBACnC;oBACD;wBACE,OAAO,EAAE,4EAAuB;wBAChC,UAAU,EAAE,4BAA4B;qBACzC;oBACD,gEAAW;oBACX,8DAAS;oBACT,yEAAoB;iBACrB;gBACD,SAAS,EAAE,CAAC,2DAAY,EAAE,0EAAqB,CAAC;aACjD;;;;;;;;;;;;;;ACtGD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACQ;AACT;AACN;;;AAEhD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,2EAAgB;QAC3B,WAAW,EAAE;YACX,6DAAS;SACV;KACF;IACD;QACE,0BAA0B;QAC1B,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kEAAa;KACzB;IACD;QACE,2BAA2B;QAC3B,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,kEAAa;KACzB;CACF,CAAC;AAEF,IAAM,QAAQ,GAAG,MAAM,KAAK,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAE5D;IAAA;KAQiC;mGAApB,gBAAgB;8JAAhB,gBAAgB,kBAPlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE;oBACrC,OAAO,EAAE,IAAI;oBACb,8CAA8C;oBAC9C,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;iBACtD,CAAC,CAAC,EACO,4DAAY;2BAtCxB;CAwCiC;AAAJ;mIAAhB,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAR5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE;wBACrC,OAAO,EAAE,IAAI;wBACb,8CAA8C;wBAC9C,iBAAiB,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU;qBACtD,CAAC,CAAC;gBACH,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\r\nimport { EventMessage, EventType, AuthenticationResult } from '@azure/msal-browser';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  loginDisplay = false;\r\n\r\n  constructor(private authService: MsalService, private msalBroadcastService: MsalBroadcastService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\r\n      )\r\n      .subscribe((result: EventMessage) => {\r\n        console.log(result);\r\n        window.location.href = 'http://192.168.1.1/login?username=user1&password=user1&dst=http%3A%2F%2Fscgr.vn';\r\n\r\n        const payload = result.payload as AuthenticationResult;\r\n        this.authService.instance.setActiveAccount(payload.account);\r\n      });\r\n\r\n      this.setLoginDisplay();\r\n  }\r\n\r\n  setLoginDisplay() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"!loginDisplay\">\r\n\r\n</div>\r\n\r\n<div *ngIf=\"loginDisplay\">\r\n    <p>Login successful!</p>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\r\nimport { AuthenticationResult, InteractionStatus, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Mikrotik Viet  Nam';\r\n  isIframe = false;\r\n  loginDisplay = false;\r\n  private readonly _destroying$ = new Subject<void>();\r\n  isModal = false;\r\n  constructor(\r\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n    private authService: MsalService,\r\n    private msalBroadcastService: MsalBroadcastService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isIframe = window !== window.parent && !window.opener;\r\n\r\n    this.msalBroadcastService.inProgress$\r\n      .pipe(\r\n        filter((status: InteractionStatus) => status === InteractionStatus.None),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setLoginDisplay();\r\n      });\r\n  }\r\n\r\n  setLoginDisplay() {\r\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\r\n    if(!this.loginDisplay) {\r\n    this.login();\r\n    } else {\r\n      window.location.href = 'http://192.168.1.1/login?username=user1&password=user1&dst=http%3A%2F%2Fscgr.vn';\r\n    }\r\n  }\r\n\r\n  login() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      if (this.msalGuardConfig.authRequest) {\r\n        this.authService.loginPopup({ ...this.msalGuardConfig.authRequest } as PopupRequest)\r\n          .subscribe((response: AuthenticationResult) => {\r\n            this.authService.instance.setActiveAccount(response.account);\r\n          });\r\n      } else {\r\n        this.authService.loginPopup()\r\n          .subscribe((response: AuthenticationResult) => {\r\n            this.authService.instance.setActiveAccount(response.account);\r\n          });\r\n      }\r\n    } else {\r\n      if (this.msalGuardConfig.authRequest) {\r\n        this.authService.loginRedirect({ ...this.msalGuardConfig.authRequest } as RedirectRequest);\r\n      } else {\r\n        this.authService.loginRedirect();\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      this.authService.logoutPopup({\r\n        postLogoutRedirectUri: \"/\",\r\n        mainWindowRedirectUri: \"/\"\r\n      });\r\n    } else {\r\n      this.authService.logoutRedirect({\r\n        postLogoutRedirectUri: \"/\",\r\n      });\r\n    }\r\n  }\r\n  close() {\r\n    this.isModal = false;\r\n  }\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}\r\n","<!-- <mat-toolbar color=\"primary\">\r\n  <a class=\"title\" href=\"/\">{{ title }}</a>\r\n\r\n  <div class=\"toolbar-spacer\"></div>\r\n\r\n  <a mat-button [routerLink]=\"['profile']\">Profile</a>\r\n\r\n  <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Login</button>\r\n  <button mat-raised-button *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\r\n</mat-toolbar>\r\n<div class=\"container\">\r\n\r\n</div> -->\r\n<router-outlet *ngIf=\"!isIframe\"></router-outlet>\r\n\r\n<!-- The Modal -->\r\n<div *ngIf=\"isModal\" id=\"myModal\" class=\"modal\">\r\n  <div  class=\"container-popup\" >\r\n    <span (click)=\"close()\" class=\"close\">&times;</span>\r\n    <div style=\"margin-top: 33px;\">\r\n      <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Kết nối wifi</button>\r\n      <button mat-raised-button *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\r\n    </div>\r\n  </div>\r\n  <div id=\"caption\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nconst GRAPH_ENDPOINT = 'https://graph.microsoft.com/v1.0/me';\r\n\r\ntype ProfileType = {\r\n  givenName?: string,\r\n  surname?: string,\r\n  userPrincipalName?: string,\r\n  id?: string\r\n}\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  profile!: ProfileType;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getProfile();\r\n  }\r\n\r\n  getProfile() {\r\n    this.http.get(GRAPH_ENDPOINT)\r\n      .subscribe(profile => {\r\n        this.profile = profile;\r\n      });\r\n  }\r\n}\r\n","<div>\r\n    <p><strong>First Name: </strong> {{profile?.givenName}}</p>\r\n    <p><strong>Last Name: </strong> {{profile?.surname}}</p>\r\n    <p><strong>Email: </strong> {{profile?.userPrincipalName}}</p>\r\n    <p><strong>Id: </strong> {{profile?.id}}</p>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { IPublicClientApplication, PublicClientApplication, InteractionType, BrowserCacheLocation, LogLevel } from '@azure/msal-browser';\r\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration, MsalRedirectComponent } from '@azure/msal-angular';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\r\n\r\nexport function loggerCallback(logLevel: LogLevel, message: string) {\r\n  console.log(message);\r\n}\r\n\r\nexport function MSALInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication({\r\n    auth: {\r\n      clientId: 'ec01dd8b-f7f6-4234-a3dc-22e04f184139',\r\n      authority: 'https://login.microsoftonline.com/125dc7b7-c709-4cb3-b084-eb2c0c21381a',\r\n      redirectUri: 'https://assets.vetgo.vn/mikrotikvn/'\r\n    },\r\n    cache: {\r\n      cacheLocation: BrowserCacheLocation.LocalStorage,\r\n      storeAuthStateInCookie: isIE, // set to true for IE 11\r\n    },\r\n    system: {\r\n      loggerOptions: {\r\n        loggerCallback,\r\n        logLevel: LogLevel.Info,\r\n        piiLoggingEnabled: false\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\r\n  const protectedResourceMap = new Map<string, Array<string>>();\r\n  protectedResourceMap.set('https://graph.microsoft.com/v1.0/me', ['user.read']);\r\n\r\n  return {\r\n    interactionType: InteractionType.Redirect,\r\n    protectedResourceMap\r\n  };\r\n}\r\n\r\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\r\n  return { \r\n    interactionType: InteractionType.Redirect,\r\n    authRequest: {\r\n      scopes: ['user.read']\r\n    }\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatListModule,\r\n    HttpClientModule,\r\n    MsalModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService\r\n  ],\r\n  bootstrap: [AppComponent, MsalRedirectComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [\r\n      MsalGuard\r\n    ]\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'code',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for Error routing\r\n    path: 'error',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true,\r\n    // Don't perform initial navigation in iframes\r\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}