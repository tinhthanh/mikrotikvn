{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\nimport { EventMessage, EventType, AuthenticationResult } from '@azure/msal-browser';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loginDisplay = false;\n\n  constructor(private authService: MsalService, private msalBroadcastService: MsalBroadcastService) { }\n\n  ngOnInit(): void {\n    this.msalBroadcastService.msalSubject$\n      .pipe(\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\n      )\n      .subscribe((result: EventMessage) => {\n        console.log(result);\n        const payload = result.payload as AuthenticationResult;\n        this.authService.instance.setActiveAccount(payload.account);\n      });\n\n      this.setLoginDisplay();\n  }\n\n  setLoginDisplay() {\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n  }\n\n}\n","<div *ngIf=\"!loginDisplay\">\n    <p class=\"welcome\">Welcome to Mikrotik VietNam!</p>\n    <p>This sample demonstrates how to configure MSAL Angular to login, logout, protect a route, and acquire an access token for a protected resource such as the Microsoft Graph.</p>\n    <p>Please sign-in to see your profile information.</p>\n</div>\n\n<div *ngIf=\"loginDisplay\">\n    <p>Login successful!</p>\n    <p>Request your profile information by clicking Profile above.</p>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\nimport { AuthenticationResult, InteractionStatus, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'Mikrotik Viet  Nam';\n  isIframe = false;\n  loginDisplay = false;\n  private readonly _destroying$ = new Subject<void>();\n\n  constructor(\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\n    private authService: MsalService,\n    private msalBroadcastService: MsalBroadcastService\n  ) { }\n\n  ngOnInit(): void {\n    this.isIframe = window !== window.parent && !window.opener;\n\n    this.msalBroadcastService.inProgress$\n      .pipe(\n        filter((status: InteractionStatus) => status === InteractionStatus.None),\n        takeUntil(this._destroying$)\n      )\n      .subscribe(() => {\n        this.setLoginDisplay();\n      });\n  }\n\n  setLoginDisplay() {\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n  }\n\n  login() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService.loginPopup({ ...this.msalGuardConfig.authRequest } as PopupRequest)\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      } else {\n        this.authService.loginPopup()\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      }\n    } else {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService.loginRedirect({ ...this.msalGuardConfig.authRequest } as RedirectRequest);\n      } else {\n        this.authService.loginRedirect();\n      }\n    }\n  }\n\n  logout() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      this.authService.logoutPopup({\n        postLogoutRedirectUri: \"/\",\n        mainWindowRedirectUri: \"/\"\n      });\n    } else {\n      this.authService.logoutRedirect({\n        postLogoutRedirectUri: \"/\",\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._destroying$.next(undefined);\n    this._destroying$.complete();\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <a class=\"title\" href=\"/\">{{ title }}</a>\n\n  <div class=\"toolbar-spacer\"></div>\n\n  <a mat-button [routerLink]=\"['profile']\">Profile</a>\n\n  <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\n</mat-toolbar>\n<div class=\"container\">\n  <!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst GRAPH_ENDPOINT = 'https://graph.microsoft.com/v1.0/me';\n\ntype ProfileType = {\n  givenName?: string,\n  surname?: string,\n  userPrincipalName?: string,\n  id?: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profile!: ProfileType;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.getProfile();\n  }\n\n  getProfile() {\n    this.http.get(GRAPH_ENDPOINT)\n      .subscribe(profile => {\n        this.profile = profile;\n      });\n  }\n}\n","<div>\n    <p><strong>First Name: </strong> {{profile?.givenName}}</p>\n    <p><strong>Last Name: </strong> {{profile?.surname}}</p>\n    <p><strong>Email: </strong> {{profile?.userPrincipalName}}</p>\n    <p><strong>Id: </strong> {{profile?.id}}</p>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { IPublicClientApplication, PublicClientApplication, InteractionType, BrowserCacheLocation, LogLevel } from '@azure/msal-browser';\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration, MsalRedirectComponent } from '@azure/msal-angular';\n\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\n\nexport function loggerCallback(logLevel: LogLevel, message: string) {\n  console.log(message);\n}\n\nexport function MSALInstanceFactory(): IPublicClientApplication {\n  return new PublicClientApplication({\n    auth: {\n      clientId: 'ec01dd8b-f7f6-4234-a3dc-22e04f184139',\n      authority: 'https://login.microsoftonline.com/125dc7b7-c709-4cb3-b084-eb2c0c21381a',\n      redirectUri: 'https://tinhthanh.github.io/mikrotikvn/'\n    },\n    cache: {\n      cacheLocation: BrowserCacheLocation.LocalStorage,\n      storeAuthStateInCookie: isIE, // set to true for IE 11\n    },\n    system: {\n      loggerOptions: {\n        loggerCallback,\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false\n      }\n    }\n  });\n}\n\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\n  const protectedResourceMap = new Map<string, Array<string>>();\n  protectedResourceMap.set('https://graph.microsoft.com/v1.0/me', ['user.read']);\n\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap\n  };\n}\n\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\n  return { \n    interactionType: InteractionType.Redirect,\n    authRequest: {\n      scopes: ['user.read']\n    }\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatListModule,\n    HttpClientModule,\n    MsalModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true\n    },\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory\n    },\n    {\n      provide: MSAL_GUARD_CONFIG,\n      useFactory: MSALGuardConfigFactory\n    },\n    {\n      provide: MSAL_INTERCEPTOR_CONFIG,\n      useFactory: MSALInterceptorConfigFactory\n    },\n    MsalService,\n    MsalGuard,\n    MsalBroadcastService\n  ],\n  bootstrap: [AppComponent, MsalRedirectComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { MsalGuard } from '@azure/msal-angular';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [\n      MsalGuard\n    ]\n  },\n  {\n    // Needed for hash routing\n    path: 'code',\n    component: HomeComponent\n  },\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    // Needed for Error routing\n    path: 'error',\n    component: HomeComponent\n  }\n];\n\nconst isIframe = window !== window.parent && !window.opener;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    useHash: true,\n    // Don't perform initial navigation in iframes\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}