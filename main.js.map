{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MsalBroadcastService, MsalService } from '@azure/msal-angular';\nimport { EventMessage, EventType, AuthenticationResult } from '@azure/msal-browser';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { filter } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  loginDisplay = false;\n\n  constructor(private spinner: NgxSpinnerService , private authService: MsalService, private msalBroadcastService: MsalBroadcastService) { }\n\n  ngOnInit(): void {\n    this.spinner.show();\n    this.msalBroadcastService.msalSubject$\n      .pipe(\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS),\n      )\n      .subscribe((result: EventMessage) => {\n\n        console.log(result);\n        window.location.href = `http://${environment.ip}/login?dst=https://google.com&username=user1&password=user1`;\n        const payload = result.payload as AuthenticationResult;\n        this.authService.instance.setActiveAccount(payload.account);\n      });\n\n      this.setLoginDisplay();\n  }\n\n  setLoginDisplay() {\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n  }\n\n}\n","<div *ngIf=\"!loginDisplay\">\n\n</div>\n\n<div *ngIf=\"loginDisplay\">\n    <p>Login successful!</p>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ip: \"192.168.1.1\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\nimport { AuthenticationResult, InteractionStatus, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'Mikrotik Viet  Nam';\n  isIframe = false;\n  loginDisplay = false;\n  private readonly _destroying$ = new Subject<void>();\n  isModal = false;\n  constructor(\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\n    private authService: MsalService,\n    private msalBroadcastService: MsalBroadcastService,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit(): void {\n    this.isIframe = window !== window.parent && !window.opener;\n    this.spinner.show();\n    this.msalBroadcastService.inProgress$\n      .pipe(\n        filter((status: InteractionStatus) => status === InteractionStatus.None),\n        takeUntil(this._destroying$)\n      )\n      .subscribe(() => {\n        this.setLoginDisplay();\n      });\n  }\n\n  setLoginDisplay() {\n    this.loginDisplay = this.authService.instance.getAllAccounts().length > 0;\n    if(!this.loginDisplay) {\n    this.login();\n    } else {\n      window.location.href =  window.location.href = `http://${environment.ip}/login?dst=https://google.com&username=user1&password=user1`;\n    }\n  }\n\n  login() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService.loginPopup({ ...this.msalGuardConfig.authRequest } as PopupRequest)\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      } else {\n        this.authService.loginPopup()\n          .subscribe((response: AuthenticationResult) => {\n            this.authService.instance.setActiveAccount(response.account);\n          });\n      }\n    } else {\n      if (this.msalGuardConfig.authRequest) {\n        this.authService.loginRedirect({ ...this.msalGuardConfig.authRequest } as RedirectRequest);\n      } else {\n        this.authService.loginRedirect();\n      }\n    }\n  }\n\n  logout() {\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\n      this.authService.logoutPopup({\n        postLogoutRedirectUri: \"/\",\n        mainWindowRedirectUri: \"/\"\n      });\n    } else {\n      this.authService.logoutRedirect({\n        postLogoutRedirectUri: \"/\",\n      });\n    }\n  }\n  close() {\n    this.isModal = false;\n  }\n  ngOnDestroy(): void {\n    this._destroying$.next(undefined);\n    this._destroying$.complete();\n  }\n}\n","<!-- <mat-toolbar color=\"primary\">\n  <a class=\"title\" href=\"/\">{{ title }}</a>\n\n  <div class=\"toolbar-spacer\"></div>\n\n  <a mat-button [routerLink]=\"['profile']\">Profile</a>\n\n  <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Login</button>\n  <button mat-raised-button *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\n</mat-toolbar>\n<div class=\"container\">\n\n</div> -->\n<router-outlet *ngIf=\"!isIframe\"></router-outlet>\n\n<!-- The Modal -->\n<!-- <div *ngIf=\"isModal\" id=\"myModal\" class=\"modal\">\n  <div  class=\"container-popup\" >\n    <span (click)=\"close()\" class=\"close\">&times;</span>\n    <div style=\"margin-top: 33px;\">\n      <button mat-raised-button *ngIf=\"!loginDisplay\" (click)=\"login()\">Kết nối wifi</button>\n      <button mat-raised-button *ngIf=\"loginDisplay\" (click)=\"logout()\">Logout</button>\n    </div>\n  </div>\n  <div id=\"caption\"></div>\n</div> -->\n\n<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#fff\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst GRAPH_ENDPOINT = 'https://graph.microsoft.com/v1.0/me';\n\ntype ProfileType = {\n  givenName?: string,\n  surname?: string,\n  userPrincipalName?: string,\n  id?: string\n}\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  profile!: ProfileType;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  ngOnInit() {\n    this.getProfile();\n  }\n\n  getProfile() {\n    this.http.get(GRAPH_ENDPOINT)\n      .subscribe(profile => {\n        this.profile = profile;\n      });\n  }\n}\n","<div>\n    <p><strong>First Name: </strong> {{profile?.givenName}}</p>\n    <p><strong>Last Name: </strong> {{profile?.surname}}</p>\n    <p><strong>Email: </strong> {{profile?.userPrincipalName}}</p>\n    <p><strong>Id: </strong> {{profile?.id}}</p>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { IPublicClientApplication, PublicClientApplication, InteractionType, BrowserCacheLocation, LogLevel } from '@azure/msal-browser';\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration, MsalRedirectComponent } from '@azure/msal-angular';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\n\nexport function loggerCallback(logLevel: LogLevel, message: string) {\n  console.log(message);\n}\n\n  export function MSALInstanceFactory(): IPublicClientApplication {\n    return new PublicClientApplication({\n      auth: {\n        clientId: '88a6db64-2f02-4ccb-8803-c2e978ec7bfb',\n        authority: 'https://login.microsoftonline.com/def15942-3533-4bcb-b9c2-a7d4a0bd0c35'\n      },\n      cache: {\n        cacheLocation: BrowserCacheLocation.LocalStorage,\n        storeAuthStateInCookie: isIE, // set to true for IE 11\n      },\n      system: {\n        loggerOptions: {\n          loggerCallback,\n          logLevel: LogLevel.Info,\n          piiLoggingEnabled: false\n        }\n      }\n    });\n  }\n\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\n  const protectedResourceMap = new Map<string, Array<string>>();\n  protectedResourceMap.set('https://graph.microsoft.com/v1.0/me', ['user.read']);\n\n  return {\n    interactionType: InteractionType.Redirect,\n    protectedResourceMap\n  };\n}\n\n\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\n  return {\n    interactionType: InteractionType.Redirect,\n    authRequest: {\n      scopes: ['user.read']\n    }\n  };\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    NgxSpinnerModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatListModule,\n    HttpClientModule,\n    MsalModule,\n\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: MsalInterceptor,\n      multi: true\n    },\n    {\n      provide: MSAL_INSTANCE,\n      useFactory: MSALInstanceFactory\n    },\n    {\n      provide: MSAL_GUARD_CONFIG,\n      useFactory: MSALGuardConfigFactory\n    },\n    {\n      provide: MSAL_INTERCEPTOR_CONFIG,\n      useFactory: MSALInterceptorConfigFactory\n    },\n    MsalService,\n    MsalGuard,\n    MsalBroadcastService\n  ],\n  bootstrap: [AppComponent, MsalRedirectComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeComponent } from './home/home.component';\nimport { MsalGuard } from '@azure/msal-angular';\n\nconst routes: Routes = [\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [\n      MsalGuard\n    ]\n  },\n  {\n    // Needed for hash routing\n    path: 'code',\n    component: HomeComponent\n  },\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    // Needed for Error routing\n    path: 'error',\n    component: HomeComponent\n  }\n];\n\nconst isIframe = window !== window.parent && !window.opener;\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    useHash: true,\n    // Don't perform initial navigation in iframes\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}